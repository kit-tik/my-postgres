// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model whitelistUser {
  id           String   @id @default(cuid())
  email        String   @unique
  createdAt     DateTime  @default(now())
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  companies     HBCDCompany[]
  coldRooms     ColdRoom[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ColdRoom {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  RID String @unique
  roomType String
  coldRoomAddress  String?
  tambon String?
  amper String?
  province String
  zip String
  productType String?
  roomWidth Decimal
  roomLength Decimal
  roomHeight Decimal
  maxTemp Decimal?
  minTemp Decimal?
  constructionType String
  year  Int?
  panelClass String @default("EPS")
  foamMass Decimal
  company  HBCDCompany @relation(fields: [bizID], references: [bizID], onDelete: Cascade)
  bizID String  // relationship to HBCDCompany
  user      User?     @relation(fields: [userEmail], references: [email])
  userEmail String?  
}

model HBCDCompany {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  name       String
  bizType    String?
  bizID     String @unique
  licenseNo String?
  officeAddress String
  officeTelNo String?
  province String
  coldRooms  ColdRoom[]
  user      User?     @relation(fields: [userEmail], references: [email])
  userEmail String? 
}
